[{"C:\\Users\\jason\\Desktop\\custom_hook3\\src\\index.js":"1","C:\\Users\\jason\\Desktop\\custom_hook3\\src\\App.js":"2","C:\\Users\\jason\\Desktop\\custom_hook3\\src\\components\\NewTask\\NewTask.js":"3","C:\\Users\\jason\\Desktop\\custom_hook3\\src\\components\\Tasks\\Tasks.js":"4","C:\\Users\\jason\\Desktop\\custom_hook3\\src\\components\\NewTask\\TaskForm.js":"5","C:\\Users\\jason\\Desktop\\custom_hook3\\src\\components\\Tasks\\TaskItem.js":"6","C:\\Users\\jason\\Desktop\\custom_hook3\\src\\components\\UI\\Section.js":"7","C:\\Users\\jason\\Desktop\\custom_hook3\\src\\hooks\\useFetch.js":"8"},{"size":142,"mtime":1616595887000,"results":"9","hashOfConfig":"10"},{"size":1542,"mtime":1630365486197,"results":"11","hashOfConfig":"10"},{"size":1276,"mtime":1630306287669,"results":"12","hashOfConfig":"10"},{"size":704,"mtime":1616595887000,"results":"13","hashOfConfig":"10"},{"size":588,"mtime":1616595887000,"results":"14","hashOfConfig":"10"},{"size":164,"mtime":1616595887000,"results":"15","hashOfConfig":"10"},{"size":176,"mtime":1616595887000,"results":"16","hashOfConfig":"10"},{"size":2435,"mtime":1630358806502,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"tvnvj",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},"C:\\Users\\jason\\Desktop\\custom_hook3\\src\\index.js",[],["36","37"],"C:\\Users\\jason\\Desktop\\custom_hook3\\src\\App.js",["38"],"C:\\Users\\jason\\Desktop\\custom_hook3\\src\\components\\NewTask\\NewTask.js",[],"C:\\Users\\jason\\Desktop\\custom_hook3\\src\\components\\Tasks\\Tasks.js",[],"C:\\Users\\jason\\Desktop\\custom_hook3\\src\\components\\NewTask\\TaskForm.js",[],"C:\\Users\\jason\\Desktop\\custom_hook3\\src\\components\\Tasks\\TaskItem.js",[],"C:\\Users\\jason\\Desktop\\custom_hook3\\src\\components\\UI\\Section.js",[],"C:\\Users\\jason\\Desktop\\custom_hook3\\src\\hooks\\useFetch.js",["39","40"],"import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n/**\r\n *\r\n * @param {*} requestConfig an object containing the fetch URL and an object that tweaks fetch()'s actions. We'll need to make GET and POST requests with it\r\n */\r\nconst useFetch = (requestConfig, applyDataFN, errorFN = () => {}) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const sendRequest = async (taskText) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      // Grab JSON data from Firebase back end\r\n      const response = await fetch(requestConfig.url, {\r\n        method: requestConfig.method ? requestConfig.method : \"GET\",\r\n        headers: requestConfig.headers ? requestConfig.headers : {},\r\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\r\n        /* CREATED FLEXIBLY: The config object will make fetch() perform a GET request \r\n        ... if we don't specify certain things */\r\n      });\r\n      if (!response.ok) throw new Error(\"Request failed!\");\r\n      const data = await response.json();\r\n      // CASE: Success\r\n      applyDataFN(data); // apply component-specific success function\r\n    } catch (err) {\r\n      errorFN(err); // apply component-specific failure function\r\n      setError(err.message || \"Something went wrong!\");\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n  // Give components using this hook access to...\r\n  // error/loading states + sendRequest function\r\n  return { isLoading, error, sendRequest };\r\n};\r\nexport default useFetch;\r\n\r\n/*\r\nconst useFetch = (url, options, errorMessage) => {\r\n  const [response, setResponse] = React.useState(null);\r\n  const [error, setError] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    // Define the asyncF within useEffect to avoid a soft error\r\n    const fetchData = async () => {\r\n      try {\r\n        // Fetch, throw error if its a bad request, parse data with JSON\r\n        const res = await fetch(url, options);\r\n        if (!res.ok) throw new Error(errorMessage); \r\n        const json = await res.json();\r\n        // Set the stateful response variable equal to the parsed JSON data\r\n        setResponse(json);\r\n      } catch (errorObj) {\r\n        // Update the stateful error object with our error object\r\n        setError(errorObj); \r\n      }\r\n    };\r\n    // Call asyncF immediately\r\n    fetchData();\r\n  }, []); \r\n\r\n  return { response, error };\r\n};\r\n*/\r\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":20,"column":6,"nodeType":"47","endLine":20,"endColumn":8,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":13},{"ruleId":"49","severity":1,"message":"53","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":16},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchTasks'. Either include it or remove the dependency array.","ArrayExpression",["56"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [fetchTasks]",{"range":"59","text":"60"},[669,671],"[fetchTasks]"]